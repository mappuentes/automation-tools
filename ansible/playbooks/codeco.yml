---
- name: Deploy CodecoApp Operator
  hosts: master
  become: true
  vars:
    repo_url: "https://gitlab.eclipse.org/eclipse-research-labs/codeco-project/acm.git"
    repo_dest: "/home/master/acm"
    dockerhub_user: "miguelliceon"
    image_tag: "miguelliceon/codecoapp-operator:2.0.0"
    ulimit_nofile: 104000
  vars_files:
    - ../vault/vault.yml
  tasks:
    - name: Comprobar prerequisitos instalados
      vars:
        tools:
          - docker
          - make
          - helm
          - git
          - nano
          - curl
          - wget
          - sudo
          - rsync
          - jq
          - yq
      block:
        - name: Check tool "{{ item }}"
          command: which {{ item }}
          register: tool_check
          failed_when: tool_check.rc != 0
          changed_when: false
          loop: "{{ tools }}"

    - name: Verificar si Go esta instalado en /usr/local/go/bin/go
      stat:
        path: /usr/local/go/bin/go
      register: go_binary

    - name: Confirmar que Go esta disponible
      debug:
        msg: "Go esta instalado en /usr/local/go/bin/go"
      when: go_binary.stat.exists

    - name: Falla si Go no esta instalado
      fail:
        msg: "Go no esta instalado en /usr/local/go/bin/go"
      when: not go_binary.stat.exists

    - name: Comprobar si directorio CNI existe
      file:
        path: /opt/cni/bin
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Descargar CNI plugins
      get_url:
        url: https://github.com/containernetworking/plugins/releases/download/v1.4.0/cni-plugins-linux-amd64-v1.4.0.tgz
        dest: /tmp/cni-plugins.tgz
        mode: '0644'

    - name: Extraer CNI plugins en /opt/cni/bin
      unarchive:
        src: /tmp/cni-plugins.tgz
        dest: /opt/cni/bin
        remote_src: yes
        extra_opts: [--no-overwrite-dir]

    - name: Clonar repositorio ACM
      git:
        repo: "{{ repo_url }}"
        dest: "{{ repo_dest }}"
        force: yes

    - name: Establecer fs.file-max en 104000
      sysctl:
        name: fs.file-max
        value: 104000
        state: present
        reload: yes

    - name: Actualizar cache apt
      apt:
        update_cache: yes

    - name: Instalar pip 
      apt:
        name: python3-pip
        state: present
      become: yes

    - name: Instalar docker-py con pip3 necesario para el login en DockerHub
      pip:
        name: docker-py
        executable: pip3
      become: yes

    - name: Log into DockerHub
      docker_login:
        username: "{{ dockerhub_user }}"
        password: "{{ dockerhub_pass }}"

    - name: Comprobar si la imagen de Codeco ya existe localmente
      docker_image_info:
        name: "{{ image_tag }}"
      register: image_info
      ignore_errors: yes

    - name: Build & push Docker image (solo si no existe)
      command: make docker-build docker-push IMG={{ image_tag }}
      args:
        chdir: "{{ repo_dest }}"
      environment:
        PATH: "/usr/local/go/bin:{{ ansible_env.PATH }}"
      when: image_info.images | length == 0

    - name: Deploy Codeco Operator
      command: make deploy IMG={{ image_tag }}
      args:
        chdir: "{{ repo_dest }}"
      environment:
        PATH: "/usr/local/go/bin:{{ ansible_env.PATH }}"
        KUBECONFIG: "/home/ubuntu/rke2.yaml"
