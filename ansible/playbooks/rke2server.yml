---
- name: Configurar master RKE2
  hosts: master
  become: yes

  vars:
    hostname: "{{ inventory_hostname }}"  # El nombre de los hosts del inventario
    vm_user: ubuntu                    # Usuario de la maquina virtual

  tasks:
    - name: Establecer el nombre de host
      command: hostnamectl set-hostname "{{ hostname }}"

    - name: Reiniciar systemd-hostnamed
      systemd:
        name: systemd-hostnamed
        state: restarted

    - name: Comprobar si directorio CNI existe
      file:
        path: /opt/cni/bin
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Descargar CNI plugins
      get_url:
        url: https://github.com/containernetworking/plugins/releases/download/v1.4.0/cni-plugins-linux-amd64-v1.4.0.tgz
        dest: /tmp/cni-plugins.tgz
        mode: '0644'

    - name: Extraer CNI plugins en /opt/cni/bin
      unarchive:
        src: /tmp/cni-plugins.tgz
        dest: /opt/cni/bin
        remote_src: yes
        extra_opts: [--no-overwrite-dir]

    # Comprobar si el archivo rke2.yaml existe
    - name: Comprobar si el archivo rke2.yaml existe
      stat:
        path: /etc/rancher/rke2/rke2.yaml
      register: rke2_config

    # Instalar RKE2 si no esta instalado
    - name: Instalar RKE2 si no esta instalado
      shell: curl -sfL https://get.rke2.io | sh -
      args:
        warn: false
      when: not rke2_config.stat.exists

    - name: Habilitar servicio rke2-server
      systemd:
        name: rke2-server.service
        enabled: yes

    - name: Crear directorio de configuracion de RKE2
      file:
        path: /etc/rancher/rke2
        state: directory
        mode: '0755'
        recurse: yes

    - name: Crear archivo config.yaml con configuracion de CNIs
      copy:
        dest: /etc/rancher/rke2/config.yaml
        content: |
          cni: none
          cluster-cidr: "10.244.0.0/16"  
        mode: '0644'

    - name: Iniciar servicio rke2-server
      systemd:
        name: rke2-server.service
        state: started

    - name: Esperar a que se genere el archivo node-token
      wait_for:
        path: /var/lib/rancher/rke2/server/node-token
        timeout: 120

    - name: Descargar node-token a la maquina fisica
      fetch:
        src: /var/lib/rancher/rke2/server/node-token
        dest: ./tokens/  # Carpeta local
        flat: yes

    - name: Copiar archivo kubeconfig a /tmp/rke2.yaml
      copy:
        remote_src: yes        
        src: /etc/rancher/rke2/rke2.yaml
        dest: /tmp/rke2.yaml
        mode: '0777'

    - name: Copiar kubeconfig a /home/{{ vm_user }}/rke2.yaml
      copy:
        remote_src: yes        
        src: /tmp/rke2.yaml
        dest: /home/{{ vm_user }}/rke2.yaml
        owner: "{{ vm_user }}"
        group: "{{ vm_user }}"
        mode: '0644'

    - name: Exportar variable de entorno KUBECONFIG al .bashrc
      lineinfile:
        path: /home/{{ vm_user }}/.bashrc
        line: 'export KUBECONFIG=/home/{{ vm_user }}/rke2.yaml'
        state: present
        insertafter: EOF

